# Agentic AI System - Render Configuration
# Made with ‚ù§Ô∏è by Mulky Malikul Dhaher in Indonesia üáÆüá©

services:
  # Main Web Service
  - type: web
    name: agentic-ai-system
    runtime: python3
    plan: starter  # or standard/pro for production
    buildCommand: pip install -r requirements.txt
    startCommand: python start_system.py --production
    repo: https://github.com/eemdeexyz/Agentic-AI-System.git
    branch: main
    rootDir: .
    
    envVars:
      - key: FLASK_ENV
        value: production
      - key: RENDER_DEPLOYMENT
        value: "true"
      - key: AGENTIC_ENVIRONMENT
        value: render
      - key: PORT
        fromService:
          type: web
          name: agentic-ai-system
          property: port
      - key: DATABASE_URL
        fromDatabase:
          name: agentic-postgres
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: agentic-redis
          property: connectionString
      - key: ENABLE_DYNAMIC_AGENTS
        value: "true"
      - key: MAX_CONCURRENT_AGENTS
        value: "15"
      - key: SELENIUM_HEADLESS
        value: "true"
      - key: LOG_LEVEL
        value: INFO
      - key: SECRET_KEY
        generateValue: true
      - key: CREDENTIAL_MASTER_PASSWORD
        generateValue: true
        
    domains:
      - agentic-ai-mulky.onrender.com
      
    healthCheckPath: /api/system/status
    
    autoDeploy: true
    
    scaling:
      minInstances: 1
      maxInstances: 3
      targetMemoryPercent: 80
      targetCPUPercent: 80

  # PostgreSQL Database
  - type: pserv
    name: agentic-postgres
    runtime: postgres
    plan: starter  # free tier
    databaseName: agentic_ai_db
    databaseUser: agentic_user
    
    envVars:
      - key: POSTGRES_DB
        value: agentic_ai_db
      - key: POSTGRES_USER
        value: agentic_user
      - key: POSTGRES_PASSWORD
        generateValue: true

  # Redis Cache
  - type: redis
    name: agentic-redis
    plan: starter  # free tier
    
    envVars:
      - key: REDIS_PASSWORD
        generateValue: true

  # Background Worker Service
  - type: worker
    name: agentic-worker
    runtime: python3
    buildCommand: pip install -r requirements.txt
    startCommand: python worker.py
    repo: https://github.com/eemdeexyz/Agentic-AI-System.git
    branch: main
    
    envVars:
      - key: WORKER_MODE
        value: "true"
      - key: DATABASE_URL
        fromDatabase:
          name: agentic-postgres
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: agentic-redis
          property: connectionString
      - key: ENABLE_DYNAMIC_AGENTS
        value: "true"
      - key: SELENIUM_HEADLESS
        value: "true"

  # Cron Jobs for Maintenance
  - type: cron
    name: agentic-maintenance
    runtime: python3
    schedule: "0 2 * * *"  # Daily at 2 AM
    buildCommand: pip install -r requirements.txt
    startCommand: python scripts/maintenance.py
    repo: https://github.com/eemdeexyz/Agentic-AI-System.git
    branch: main
    
    envVars:
      - key: MAINTENANCE_MODE
        value: "true"
      - key: DATABASE_URL
        fromDatabase:
          name: agentic-postgres
          property: connectionString

# Static Site (if needed)
# - type: static
#   name: agentic-ai-static
#   buildCommand: python build_static.py
#   staticPublishPath: ./web_interface/static
#   pullRequestPreviewsEnabled: true
#   
#   envVars:
#     - key: STATIC_BUILD
#       value: "true"
#   
#   routes:
#     - type: rewrite
#       source: /api/*
#       destination: https://agentic-ai-mulky.onrender.com/api/*
#     - type: rewrite  
#       source: /*
#       destination: /index.html

# Notifications
notifications:
  - type: email
    emails:
      - mulkymalikuldhr@mail.com
    events:
      - deploy-succeeded
      - deploy-failed
      - service-suspended

# Build settings
build:
  commands:
    - pip install --upgrade pip
    - pip install -r requirements.txt
    - python scripts/setup_production.py
    
# Health checks
healthChecks:
  - path: /api/system/status
    intervalSeconds: 30
    timeoutSeconds: 10
    unhealthyThresholdCount: 3
    healthyThresholdCount: 2

# Custom domains (for paid plans)
# customDomains:
#   - name: agentic-ai.mulky.com
#     type: apex
#   - name: www.agentic-ai.mulky.com
#     type: www

# Resources and scaling
resources:
  cpu: 0.5  # vCPUs
  memory: 512MB  # RAM

# Backup configuration
backup:
  enabled: true
  schedule: "0 1 * * *"  # Daily at 1 AM
  retention: 7  # days
